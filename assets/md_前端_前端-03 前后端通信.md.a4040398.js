import{_ as e,o as r,c as a,Q as t}from"./chunks/framework.54af5271.js";const b=JSON.parse('{"title":"前端-03 前后端通信","description":"","frontmatter":{},"headers":[],"relativePath":"md/前端/前端-03 前后端通信.md","filePath":"md/前端/前端-03 前后端通信.md"}'),o={name:"md/前端/前端-03 前后端通信.md"},l=t('<p><img src="https://pic.imgdb.cn/item/64c4a5611ddac507cc058875.png" alt="img"></p><h1 id="前端-03-前后端通信" tabindex="-1">前端-03 前后端通信 <a class="header-anchor" href="#前端-03-前后端通信" aria-label="Permalink to &quot;前端-03 前后端通信&quot;">​</a></h1><blockquote><p>难度系数：有点难了</p><p>在前面的学习中，我们制作的页面都仅仅只使用了本地资源。接下来，我们就要迈入网络的世界了。在本节中，你将会了解互联网通信，学习AJAX，并将学到的知识应用在你第一节制作的blog profile页面中；你还将浅尝服务器端的相关知识，初试Node.js，熟悉Node.js环境，在本地搭建一个简易服务器，并在这个服务器上搭建自己的API。这道题将带领你从前端初级阶段，迈入高级阶段的大门。做好准备，咱们开始吧！</p></blockquote><h2 id="part0-前置知识" tabindex="-1"><strong>Part0 - 前置知识</strong> <a class="header-anchor" href="#part0-前置知识" aria-label="Permalink to &quot;**Part0 - 前置知识**&quot;">​</a></h2><p>作为前端工程师，在一个大项目中不可避免的需要与后端开发者沟通。本题的目的在于带领你了解前端和后端是如何交互。Part1是站在前端开发者的视角，调用第三方的API；Part2是站在后端开发者的视角，自制一个API。除此之外，本题还将带领大家尝试使用Node.js —— 前端高阶开发的基础。Node.js是运行在服务器端的JavaScript，很多高阶的前端框架，如Vitepress（工作室的做题页面就是VitePress开发的）、Electron（VSCode就是用Electron开发的）都会使用Node.js的环境。同时Node.js也可以作为后端开发语言（虽然不是很常用），因此本题旨在带大家熟悉Node.js的环境，并为大家提供一个后端的视角，也为第四题做准备。</p><p>在动手开始改进你的blog profile页面之前，你可能需要了解以下知识：</p><ul><li>计算机在互联网上如何交互与通信？什么是HTTP与HTTPS？什么是IP协议？</li><li>HTTP请求分为哪些类型？GET和POST的区别？什么是请求行、请求头、请求体？</li><li>HTTP响应是由哪些部分组成的？API往往响应什么类型的数据？了解一下JSON格式</li></ul><h2 id="part1-利用第三方api" tabindex="-1"><strong>Part1 - 利用第三方API</strong> <a class="header-anchor" href="#part1-利用第三方api" aria-label="Permalink to &quot;**Part1 - 利用第三方API**&quot;">​</a></h2><h4 id="题目描述" tabindex="-1"><strong>题目描述</strong> <a class="header-anchor" href="#题目描述" aria-label="Permalink to &quot;**题目描述**&quot;">​</a></h4><p>如果想在自己的页面调用第三方服务器上的内容，又不愿重新加载页面，就需要我们使用Ajax技术了。一般来说，网络上会提供一些免费的接口，供开发者使用，开发者可通过调用接口来获取相关信息。我们希望你利用网络上的一些API，来对你的blog profile页面进行美化。比如添加类似于下面这样的元素：</p><p><img src="https://pic.imgdb.cn/item/64feefeb661c6c8e54840445.png" alt="image-20230910215533565"></p><h4 id="题目要求" tabindex="-1"><strong>题目要求</strong> <a class="header-anchor" href="#题目要求" aria-label="Permalink to &quot;**题目要求**&quot;">​</a></h4><p>学习使用AJAX，通过调用API的方式将元素渲染到你的blog profile页面中。以下是一些推荐使用的API：</p><ul><li><a href="https://dev.qweather.com/" target="_blank" rel="noreferrer">和风天气</a></li><li><a href="https://developer.hitokoto.cn/sentence/" target="_blank" rel="noreferrer">一言</a></li><li><a href="https://docs.tenapi.cn/" target="_blank" rel="noreferrer">微博热搜</a></li></ul><p>在第一题的基础上加入一些元素，将美化后的页面上传到一个新的GitHub仓库当中，将GitHub链接分享给我们</p><h4 id="可能遇到的问题" tabindex="-1"><strong>可能遇到的问题</strong> <a class="header-anchor" href="#可能遇到的问题" aria-label="Permalink to &quot;**可能遇到的问题**&quot;">​</a></h4><ul><li><p>什么是HTTP请求？如何使用JavaScript发送HTTP请求？</p></li><li><p>如何测试一个API，请在本地上下载一个 Postman 或者 APIPost ，学习一下如何使用</p></li><li><p>HTTP请求分为GET和POST等类型，在Internet上加载网页使用的是哪种请求？获取API一般又是哪种请求？</p></li><li><p>AJAX是什么？什么是异步？异步有什么作用？以下是一些可以参考的资料链接。</p><ul><li><p><a href="https://www.runoob.com/ajax/ajax-tutorial.html" target="_blank" rel="noreferrer">菜鸟教程 Ajax</a></p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/AJAX" target="_blank" rel="noreferrer">MDN Ajax</a></p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Asynchronous/Introducing" target="_blank" rel="noreferrer">异步是什么？</a></p></li><li><p>较难的问题可以参考B站上的视频教程</p></li></ul></li></ul><h2 id="part2-搭建一个自己的api" tabindex="-1"><strong>Part2 - 搭建一个自己的API</strong> <a class="header-anchor" href="#part2-搭建一个自己的api" aria-label="Permalink to &quot;**Part2 - 搭建一个自己的API**&quot;">​</a></h2><h4 id="题目描述-1" tabindex="-1"><strong>题目描述</strong> <a class="header-anchor" href="#题目描述-1" aria-label="Permalink to &quot;**题目描述**&quot;">​</a></h4><p>在上面的题目中，你已经学会使用第三方的API来美化你的博客。那么，API是如何工作的？我可以写一个自己的API吗？学习使用Node.js，尝试自己编写一个API。</p><h4 id="题目要求-1" tabindex="-1"><strong>题目要求</strong> <a class="header-anchor" href="#题目要求-1" aria-label="Permalink to &quot;**题目要求**&quot;">​</a></h4><h5 id="step1" tabindex="-1"><strong>step1</strong> <a class="header-anchor" href="#step1" aria-label="Permalink to &quot;**step1**&quot;">​</a></h5><ol><li>下载Node.js</li><li><strong>截图记录</strong>你用Node.js搭建服务器并利用服务器在<strong>命令框</strong>和<strong>浏览器</strong>上分别显示“hello，glimmer”的整个过程</li><li>在markdown上写下你的过程，提交一个PDF文件</li></ol><h5 id="step2" tabindex="-1"><strong>step2</strong> <a class="header-anchor" href="#step2" aria-label="Permalink to &quot;**step2**&quot;">​</a></h5><ol><li>学习使用npm，并利用npm下载express框架（关于npm下载的过程需要<strong>截图</strong>）</li><li>学习使用express框架，并利用express框架，制作一个自己的API</li><li>API的功能可以仿造之前的<a href="https://developer.hitokoto.cn/sentence/" target="_blank" rel="noreferrer">一言</a>API，在句子库里随机取一个句子作为返回结果</li></ol><h5 id="step3" tabindex="-1"><strong>step3</strong> <a class="header-anchor" href="#step3" aria-label="Permalink to &quot;**step3**&quot;">​</a></h5><ol><li>使用Postman 或者 ApiPost 测试这个API，将测试界面截图</li><li>整理你所有的截图，新建一个markdown文件，<strong>在md中附上你的Node.js代码和截图</strong>，导出为pdf，交给我们欣赏一下吧🥰</li></ol><h5 id="可能遇到的问题-1" tabindex="-1"><strong>可能遇到的问题</strong> <a class="header-anchor" href="#可能遇到的问题-1" aria-label="Permalink to &quot;**可能遇到的问题**&quot;">​</a></h5><p>我该怎么规范定义我的 API ？ 这里可以看看 <a href="https://www.ruanyifeng.com/blog/2014/05/restful_api.html" target="_blank" rel="noreferrer">Restful API</a> 规范。</p><p><strong>Node.js入门教程</strong></p><ul><li><a href="https://dev.nodejs.cn/learn/" target="_blank" rel="noreferrer">学习教程 | Node中文网</a></li><li><a href="https://www.runoob.com/nodejs/" target="_blank" rel="noreferrer">Node.js 教程 | 菜鸟教程</a></li></ul><p><strong>很多同学可能发现Node.js和之前学习的JavaScript不太一样，大家可以参考下面两个链接</strong></p><ul><li><a href="https://dev.nodejs.cn/learn/how-much-javascript-do-you-need-to-know-to-use-nodejs/" target="_blank" rel="noreferrer">需要了解多少 JavaScript 才能使用 Node.js？</a></li><li><a href="https://dev.nodejs.cn/learn/differences-between-nodejs-and-the-browser/" target="_blank" rel="noreferrer">Node.js 和浏览器之间的区别?</a></li></ul><p><strong>express框架可以参考哪些教程？</strong></p><ul><li><a href="https://express.nodejs.cn/en/starter/installing.html" target="_blank" rel="noreferrer">Express 教程 |Node.js中文网 </a></li><li><a href="https://www.runoob.com/nodejs/nodejs-express-framework.html" target="_blank" rel="noreferrer">Node.js Express 框架 | 菜鸟教程</a></li><li>较难的问题可以参考B站上的视频教程</li></ul><h2 id="更进一步" tabindex="-1"><strong>更进一步？</strong> <a class="header-anchor" href="#更进一步" aria-label="Permalink to &quot;**更进一步？**&quot;">​</a></h2><p>感兴趣的同学还可以试试了解<strong>注册和登录的原理</strong>（cookie和session），进一步加深你对前后端通信的理解，<strong>这个部分可以不提交，提交可以作为加分项</strong>。</p><p>正如我之前提到的，你可以继续使用Node.js作为后端语言（较为困难）；或者如果你曾经学过Python的话，你可以很快上手flask框架（亲测简单而且好用）来编写以下的功能：</p><ul><li>用户可以登录和注册，并且可以保存登录状态。在未登录时，无法查看博客。（也就是关闭页面后，一段时间内再次打开页面，还能保持登陆状态，并且<strong>没有登录状态的时候，不能访问日历界面</strong>）</li><li>支持多个用户登录，用户不能查看别人的博客，用户登录的用户名和密码需要保存在数据库中（若没有学过数据库，也可以保存在JSON文件中）。</li></ul><h4 id="本题提交方式" tabindex="-1"><strong>本题提交方式</strong> <a class="header-anchor" href="#本题提交方式" aria-label="Permalink to &quot;**本题提交方式**&quot;">​</a></h4><blockquote><p>收件邮箱：<a href="mailto:glimmer401@outlook.com" target="_blank" rel="noreferrer">glimmer401@outlook.com</a></p><p>主题格式： 学号-姓名-考核-前端-03</p><p>主题示例：2023090101012-张三-考核-前端-03</p><p>提交文件：github链接和PDF文件</p></blockquote><h4 id="出题者q-a方式" tabindex="-1"><strong>出题者Q&amp;A方式</strong> <a class="header-anchor" href="#出题者q-a方式" aria-label="Permalink to &quot;**出题者Q&amp;A方式**&quot;">​</a></h4><blockquote><p>QQ：2983474545 邮箱：<a href="mailto:2983474545@qq.com" target="_blank" rel="noreferrer">2983474545@qq.com</a></p></blockquote>',43),n=[l];function s(i,p,h,d,c,g){return r(),a("div",null,n)}const m=e(o,[["render",s]]);export{b as __pageData,m as default};
